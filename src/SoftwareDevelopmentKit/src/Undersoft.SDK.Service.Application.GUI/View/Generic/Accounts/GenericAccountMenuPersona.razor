@using Undersoft.SDK.Service
@using Undersoft.SDK.Service.Access
@using Undersoft.SDK.Service.Data.Event

@inherits ViewItem<TAccount>

@typeparam TAccount where TAccount : class, IOrigin, IInnerProxy
@typeparam TModel where TModel : class, IOrigin, IInnerProxy, IAuthorization
@typeparam TValidator where TValidator : class, IValidator<IViewData<TModel>>

<FluentStack Orientation="Orientation.Horizontal" VerticalAlignment="VerticalAlignment.Center" HorizontalAlignment="HorizontalAlignment.Right" HorizontalGap="5">
<div id="account-top-menu" role="button">
    <FluentPersona Initials="?" ImageSize="35px">
    </FluentPersona>
</div>

<div>
        <GenericAccountMenu TModel="TModel" TValidator="TValidator" Position="HorizontalPosition.Left" Rubric="Data.Rubrics[0]" AnchorId="account-top-menu" Data="@(Data[0])" Anchored="true" Style="@("margin-top:8px;")" />
</div>
</FluentStack>
@code {

    protected override void OnParametersSet()
    {
        if (Data == null)
            Data = new ViewData<TAccount>(typeof(TAccount).New<TAccount>());

        Data.MapRubrics();
        Data.Rubrics.ForEach(r =>
            {
                Model.Proxy[r.RubricId] = r.RubricType.New();
                if (r.DisplayName == null)
                    r.DisplayName = r.RubricName;

            });
     
        Data.Put(Data.Rubrics.ForEach(r => typeof(ViewData<>).MakeGenericType(r.RubricType).New<IViewData>(Model.Proxy[r.RubricId])));

        base.OnParametersSet();
    }
}