@using Undersoft.SDK.Service
@using Undersoft.SDK.Service.Data.Event

@inject IServicer _servicer

@typeparam TModel where TModel : class, IOrigin, IInnerProxy, IAuthorization
@typeparam TValidator where TValidator : class, IValidator<IViewData<TModel>>

<div role="button" @onclick="@OpenAccountPanelAsync">
<FluentPersona Initials="?" ImageSize="35px" StatusSize="PresenceBadgeSize.Tiny" >
</FluentPersona>
</div>

@code {

    private IViewPanel<TModel> _panel = default!;

    protected override void OnInitialized()
    {
        _panel = _servicer.Initialize<ViewPanel<GenericAccountPanel<TModel, TValidator>, TModel>>();
    }

    private async Task OpenAccountPanelAsync(MouseEventArgs args)
    {
        await _panel.Show(new ViewData<TModel>(), (p) =>
           {
               p.Alignment = HorizontalAlignment.Right;
               p.Title = $"Account";
               p.PrimaryAction = "Save";               
               p.SecondaryAction = "Cancel";
               p.ShowDismiss = true;
           });

        HandlePanel(_panel.Content);
    }

    private void HandlePanel(IViewData<TModel>? result)
    {

    }
}