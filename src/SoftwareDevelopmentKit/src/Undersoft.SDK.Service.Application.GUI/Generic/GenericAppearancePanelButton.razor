@using Undersoft.SDK.Service;
@using Undersoft.SDK.Service.Application.GUI;
@using Undersoft.SDK.Service.Access;
@using Undersoft.SDK.Service.Application.GUI.View;
@using Undersoft.SDK.Service.Operation

@inject NavigationManager _navigation
@inject IServicer _servicer

<div>
    <FluentIcon Value="@(new Icons.Regular.Size20.Settings())" Color="Color.Fill" Title="Site settings" OnClick="OpenAppearancePanel" />
</div>

@code
{
    private IViewPanel<AppearanceState> _panel = default!;

    protected override void OnInitialized()
    {
        _panel = _servicer.Initialize<ViewPanel<GenericAppearancePanel<AppearanceState>, AppearanceState>>();
    }

    private async Task OpenAppearancePanel()
    {
        var data = new ViewData<AppearanceState>();
        data.HorizontalAlignment = HorizontalAlignment.Right;

        await _panel.Show(data, (p) =>
        {
            p.ShowDismiss = true;
            p.PrimaryAction = "Ok";
            p.Alignment = HorizontalAlignment.Right;
        });
    }
}
