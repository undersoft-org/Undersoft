@using System.ComponentModel.DataAnnotations
@using FluentValidation
@using Undersoft.SDK.Instant.Proxies
@using Undersoft.SDK.Instant.Rubrics
@using Undersoft.SDK
@using Undersoft.SDK.Invoking

@typeparam TModel where TModel : class, IOrigin, IInnerProxy
@typeparam TMenu where TMenu : class, IOrigin, IInnerProxy

<div class="generics generic-context-menu menus">
    <CascadingValue Value="@Content">
        <CascadingValue Value="@Menu">
            <FluentMenu Anchor="@Anchor" Trigger="MouseButton.Right" Anchored="false" @onmenuchange=OnMenuChange>
                @foreach (var _rubric in _rubrics)
                {

                }
            </FluentMenu>
        </CascadingValue>
    </CascadingValue>
</div>




@code {
    private IViewRubrics _rubrics => Menu.Rubrics;

    protected override void OnInitialized()
    {
        if (Menu == null)
            Menu =  new ViewData<TMenu>();
    }

    [Parameter]
    public string Anchor { get; set; } = default!;

    [Parameter]
    public IViewData<TModel> Content { get; set; } = default!;

    [Parameter]
    public IViewData<TMenu> Menu { get; set; } = default!;

    private void OnMenuChange(MenuChangeEventArgs args)
    {
        if (args is not null && args.Value is not null)
            _ = args.Value;
    }
}

