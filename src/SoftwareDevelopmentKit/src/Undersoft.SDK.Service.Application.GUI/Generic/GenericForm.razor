@using System.ComponentModel.DataAnnotations
@using FluentValidation
@using Undersoft.SDK.Instant.Proxies
@using Undersoft.SDK.Instant.Rubrics
@using Undersoft.SDK

@typeparam TModel where TModel : class, IOrigin, IInnerProxy
@typeparam TValidator where TValidator : class, IValidator<IGenericData<TModel>>
 
<div class="generics generic-form forms">
    <EditForm EditContext="@Context" FormName="generic_form">
        <GenericFormValidator TValidator="TValidator" TModel="TModel" />
        <CascadingValue Value="@Model">
            <FluentStack Orientation="Orientation.Vertical" HorizontalAlignment="HorizontalAlignment.Center" VerticalAlignment="VerticalAlignment.Center" VerticalGap="15">
                @foreach (var _rubric in _rubrics)
                {
                    <!-- Auto Field -->
                    <GenericField TModel="TModel" Rubric="@_rubric"/>
                }
            </FluentStack>
        </CascadingValue>
        <div style="color: var(--error);">
            <FluentValidationSummary />
        </div>
    </EditForm>
</div>

@code {
    private IRubrics _rubrics => Model.DisplayRubrics;
    private IProxy _proxy => Model.Data.Proxy;

    protected override void OnInitialized()
    {
        if (Context == null)
            Context = new EditContext(Model);
    }

    [Parameter]
    public EditContext Context { get; set; } = default!;

    [Parameter]
    public IGenericData<TModel> Model { get; set; } = default!;
}

