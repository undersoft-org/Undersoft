@page "/account/signup"

@inject IAccountAccess _service
@inject NavigationManager _navigation

@using Undersoft.SDK.Invoking;
@using Undersoft.SDK.Service.Data.Client;
@using Undersoft.SSC.Service.Application;
@using Undersoft.SDK.Service.Application;
@using Undersoft.SDK.Service.Application.Access;


<FluentGrid Justify="JustifyContent.SpaceAround">
    <FluentGridItem Style="place-content:center; align-content: center min-width: 300px">
        <h3>Sign up</h3>
        <EditForm Model="@account" OnValidSubmit="@OnSubmit" FormName="SignUp" novalidate>
            <DataAnnotationsValidator />
            <FluentValidationSummary />
            <FluentStack Orientation="Orientation.Vertical" HorizontalAlignment="HorizontalAlignment.Center" VerticalAlignment="VerticalAlignment.Center" VerticalGap="10">
                <div>
                    <FluentTextField Name="email" InputMode="InputMode.Text" @bind-Value="@firstName" Label="First name" Required Size="32" />
                     <FluentValidationMessage For="@(() => firstName)" />
                 </div>
                 <div>
                     <FluentTextField Name="email" InputMode="InputMode.Text" @bind-Value="@lastName" Label="Last name" Required Size="32" />
                     <FluentValidationMessage For="@(() => lastName)" />
                 </div>
                 <div>
                     <FluentTextField Name="email" InputMode="InputMode.Email" @bind-Value="@account.Credentials.Email" Label="Email" Required Size="32" />
                     <FluentValidationMessage For="@(() => account.Credentials.Email)" />
                 </div>
                 <div>
                     <FluentTextField Name="password" TextFieldType="TextFieldType.Password" @bind-Value="@password" Label="Password" Required Size="32" />
                     <FluentValidationMessage For="@(() => password)" />
                 </div>
                 <div>
                     <FluentTextField Name="password" TextFieldType="TextFieldType.Password" @bind-Value="@retypedPassword" Label="Retype password" Required Size="32" />
                     <FluentValidationMessage For="@(() => retypedPassword)" />
                 </div>
                 <FluentStack Orientation="Orientation.Horizontal" HorizontalAlignment="HorizontalAlignment.Center">
                     <FluentButton Type="ButtonType.Submit" Appearance="Appearance.Accent">Sign up</FluentButton>
                     <FluentSpacer />
                     <FluentButton Type="ButtonType.Button" Appearance="Appearance.Accent" OnClick="OnSignIn">Sign in</FluentButton>
                 </FluentStack>
             </FluentStack>
         </EditForm>
     </FluentGridItem>
 </FluentGrid>

 @code
 {
    private Account account = new Account();
    private string firstName = "";
    private string lastName = "";
    private string password = "";
    private string retypedPassword = "";

    private async Task OnSubmit()
    {
        await _service.SignUp(account);
        _navigation.NavigateTo("");
    }

    private void OnSignIn()
    {
        _navigation.NavigateTo("/account/signin");
    }
 }
