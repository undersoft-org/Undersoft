@using Undersoft.SDK.Instant.Updating
@using Undersoft.SDK.Service;
@using Undersoft.SDK.Service.Application.Access;
@using Undersoft.SDK.Service.Access;

@page "/access/confirm_password_reset"
@inject IAccountAccess _access
@inject NavigationManager _navigation
@inject IServicer _servicer

@code
{
    private IViewDialog<Credentials> _dialog = default!;

    protected override void OnInitialized()
    {
        _dialog = _servicer.Initialize<AccessDialog<GenericFormDialog<Credentials, AccessValidator>, Credentials>>();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
            await ConfirmingPasswordReset("Pasword recovery confirmation");
    }

    private async Task ConfirmingPasswordReset(string title, string description = "")
    {
        var data = new ViewData<Credentials>(new Credentials(), CommandMode.Delete, title);
        data.SetVisible("PasswordResetToken");
        data.Description = description;

        while (true)
        {           
            await _dialog.Show(data);

            var content = _dialog.Content;

            if (content != null)
            {
                var result = await _access.ResetPassword(new Account() { Credentials = content.Model });

                if (result.Notes.Status == SigningStatus.ResetPasswordConfirmed)
                {
                    _navigation.NavigateTo("access/confirm_password_reset");
                    return;
                }
                data.ClearData();
                result.Notes.PatchTo(data);
            }
            else
            {
                _navigation.NavigateTo("");
                return;
            }
        }
    }
}
