@using Undersoft.SDK.Instant.Updating
@using Undersoft.SDK.Service;
@using Undersoft.SDK.Service.Access

@page "/access/sign_in"
@inject IAccountAccess _access
@inject NavigationManager _navigation
@inject IServicer _servicer

@code
{
    private IViewDialog<Credentials> _dialog = default!;

    protected override void OnInitialized()
    {
        _dialog = _servicer.Initialize<AccessDialog<SignInDialog<Credentials, AccessValidator>, Credentials>>();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
            await SigningIn("Sign in");
    }    

    private async Task SigningIn(string title, string description = "")
    {
        var data = new ViewData<Credentials>(new Credentials(), CommandMode.Access, title);
        data.SetRequired(nameof(Credentials.Email), nameof(Credentials.Password));
        data.SetVisible(nameof(Credentials.SaveAccountInCookies));
        data.Description = description;
        data.Height = "500px";

        while (true)
        {
            await _dialog.Show(data);

            var content = _dialog.Content;

            if (content != null)
            {
                if (content.HaveNext && content.NextPath != null)
                {
                    _navigation.NavigateTo(content.NextPath);
                    return;
                }

                var result = await _access.SignIn(new Account() { Credentials = content.Model });

                if (result.Credentials.Authenticated)
                {
                    if (result.Credentials.EmailConfirmed)
                        if (result.Credentials.RegistrationCompleted)
                            _navigation.NavigateTo("");
                        else
                            _navigation.NavigateTo("/account/register_account");
                    else
                        _navigation.NavigateTo("/account/confirm_email");
                    return;
                }
                data.ClearData();
                result.Notes.PatchTo(data);
            }
            else
            {
                _navigation.NavigateTo("");
                return;
            }
        }
    }
}
