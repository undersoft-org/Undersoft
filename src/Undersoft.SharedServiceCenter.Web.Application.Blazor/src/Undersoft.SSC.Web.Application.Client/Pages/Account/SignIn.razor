@page "/account/signin"

@inject IRemoteRepository<IDataStore, Authorization> _repository
@inject IAuthenticationStateService _authService
@inject NavigationManager navigationManager

<h3>Sign in</h3>

<EditForm Model="auth" OnValidSubmit="Authorize">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label>Email:</label>
        <div>
            <InputText class="form-control" @bind-Value="@auth.Credentials.Email" />
            <ValidationMessage For="@(() => auth.Credentials.Email)" />
        </div>
    </div>

    <div class="form-group">
        <label>Password:</label>
        <div>
            <InputText type="password" class="form-control" @bind-Value="@auth.Credentials.Password" />
            <ValidationMessage For="@(() => auth.Credentials.Password)" />
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Sign in</button>
</EditForm>

@code {
    private Authorization? auth = new Authorization();

    private async Task Authorize()
    {
        auth = (await _repository.ActionAsync(auth, AuthorizationAction.SignIn));

        if (auth != null)
            await _authService.SignIn(auth);

        navigationManager.NavigateTo("");
    }
}
