<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      internalLogFile="../../logs/logging-internal.log">

  <variable name="MicrosoftLevel" value="${level:lowercase=true:truncate=4:when=level==LogLevel.Info or level==LogLevel.Warn}${when:when=level==LogLevel.Error:inner=fail}${when:when=level==LogLevel.Fatal:inner=crit}${when:when=level==LogLevel.Debug:inner=dbug}${when:when=level==LogLevel.Trace:inner=trce}" />
  <variable name="MicrosoftLayout" value="${MicrosoftLevel}: ${logger}[${event-properties:EventId_Id:whenEmpty=0}][${longdate}]${newline}      ${message}${onexception:inner=${newline}${exception:format=tostring}}" />
  <variable name="MicrosoftWebLayout" value="${MicrosoftLevel}: ${logger}[${event-properties:EventId_Id:whenEmpty=0}][${longdate}][url: ${aspnet-request-url}][action: ${aspnet-mvc-action}][${callsite}][body: ${aspnet-request-posted-body}] ${newline}      ${message}${onexception:inner=${newline}${exception:format=tostring}}" />

  <!-- enable asp.net core layout renderers -->
  <extensions>
    <add assembly="NLog.Web.AspNetCore"/>
  </extensions>


  <targets async="true">
    <!-- File Target for all log messages with basic details -->
    <target xsi:type="File"
            name="allfile"
            fileName="../../logs/logging-trace-all-${shortdate}.log"
            layout="${longdate} | ${event-properties:item=EventId_Id:whenEmpty=0} | ${uppercase:${level}} | ${logger} | ${message} | ${exception:format=tostring}">
    </target>

    <!-- File Target for own log messages with extra web details using some ASP.NET core renderers -->
    <target xsi:type="File"
            name="webfile"
            fileName="../../logs/logging-info-web-${shortdate}.log"
            layout="${longdate} | ${event-properties:item=EventId_Id:whenEmpty=0} | ${uppercase:${level}} | ${logger} | ${message} | ${exception:format=tostring}|url: ${aspnet-request-url} | action: ${aspnet-mvc-action}|${callsite}| body: ${aspnet-request-posted-body}" >
    </target>

    <!--<target name="email" xsi:type="Mail"
              smtpServer="smtp.DomainName.com"
              smtpAuthentication="Basic"
              smtpUsername="Username@DomainName.com"
              smtpPassword =""
              enableSsl="true"
              subject="NLog message from system X on ${machinename}"
              to="Username@DomainName.com"
              from="Username@DomainName.com"  />-->


    <!--Console Target for hosting lifetime messages to improve Docker / Visual Studio startup detection -->
    <target xsi:type="Console"
            name="console"
            layout="${level:truncate=5:tolower=true}: ${logger}[0]${newline}       ${message}${newline}       ${exception:format=tostring}">
    </target>
  </targets>

  <!-- rules to map from logger name to target -->
  <rules>
    <!--All logs, including from Microsoft-->
    <logger name="*" minlevel="Info" writeTo="allfile"/>
    <!--Output hosting lifetime messages to console target for faster startup detection -->
    <logger name="Microsoft.AspNetCore.Hosting.Diagnostics" minlevel="Info" writeTo="console" final="true" />
    <logger name="Microsoft.AspNetCore.Hosting.Diagnostics" minlevel="Info" writeTo="webfile" final="true" />

    <!--Skip non-critical Microsoft logs and so log only own logs (BlackHole) -->
    <logger name="Microsoft.*" maxlevel="Info"  final="true" />
    <logger name="System.Net.Http.*" maxlevel="Info"  final="true" />
  </rules>

</nlog>
